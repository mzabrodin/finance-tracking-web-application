"""API for handling user feedback in a Flask application."""

import os
from datetime import datetime

from flask import Blueprint, request, current_app
from flask_mail import Message
from pydantic import BaseModel, ValidationError, EmailStr, validator

from app.utils.extensions import mail
from app.utils.decorators import logged_in_required
from app.utils.responses import create_response

feedback = Blueprint('feedback', __name__)
"""Feedback Blueprint –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–≥—É–∫—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""


class FeedbackSchema(BaseModel):
    """Pydantic model for validating feedback data."""
    name: str
    email: EmailStr
    rating: int
    feedback: str
    category: str

    class Config:
        """Pydantic configuration"""
        str_strip_whitespace = True

    @validator('rating')
    def validate_rating(cls, v):
        """Validate that rating is between 1 and 5."""
        v = int(v) if isinstance(v, str) else v
        if not 1 <= v <= 5:
            raise ValueError('Rating –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 1 –¥–æ 5')
        return v


def create_admin_html_template(feedback_data):
    """Creates HTML template for admin notification."""
    category_names = {
        'general': '–ó–∞–≥–∞–ª—å–Ω–∏–π –≤—ñ–¥–≥—É–∫',
        'bug': '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É',
        'feature': '–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ—ó',
        'ui': '–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
        'performance': '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å'
    }
    rating_stars = '‚òÖ' * feedback_data['rating'] + '‚òÜ' * (5 - feedback_data['rating'])

    return f"""
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #333;">üéØ –ù–æ–≤–∏–π –≤—ñ–¥–≥—É–∫ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h2>
        <h3>üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>
        <p><strong>–Ü–º'—è:</strong> {feedback_data['name']}</p>
        <p><strong>Email:</strong> {feedback_data['email']}</p>
        <p><strong>–î–∞—Ç–∞:</strong> {datetime.now().strftime('%d.%m.%Y –æ %H:%M')}</p>
        <h3>üìä –î–µ—Ç–∞–ª—ñ –≤—ñ–¥–≥—É–∫—É</h3>
        <p><strong>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</strong> {category_names.get(feedback_data['category'], feedback_data['category'])}</p>
        <p><strong>–û—Ü—ñ–Ω–∫–∞:</strong> {rating_stars} ({feedback_data['rating']}/5)</p>
        <h3>üí¨ –¢–µ–∫—Å—Ç –≤—ñ–¥–≥—É–∫—É</h3>
        <p>{feedback_data['feedback']}</p>
        <hr>
        <p style="font-size: 0.9em; color: #666;">
            üí° <em>–í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –Ω–∞ —Ü–µ–π email - –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—ñ–¥–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.</em>
        </p>
        <p style="font-size: 0.9em; color: #666;">
            –¶–µ–π email –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —Å–∏—Å—Ç–µ–º–æ—é –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É.
        </p>
    </div>
    """


def create_admin_text_template(feedback_data):
    """Text template for admin notification."""
    category_names = {
        'general': '–ó–∞–≥–∞–ª—å–Ω–∏–π –≤—ñ–¥–≥—É–∫',
        'bug': '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É',
        'feature': '–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ—ó',
        'ui': '–Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
        'performance': '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å'
    }

    return f"""
üéØ –ù–û–í–ò–ô –í–Ü–î–ì–£–ö –í–Ü–î –ö–û–†–ò–°–¢–£–í–ê–ß–ê

üë§ –ö–û–ù–¢–ê–ö–¢–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø:
–Ü–º'—è: {feedback_data['name']}
Email: {feedback_data['email']}
–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y –æ %H:%M')}

üìä –î–ï–¢–ê–õ–Ü –í–Ü–î–ì–£–ö–£:
–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {category_names.get(feedback_data['category'], feedback_data['category'])}
–û—Ü—ñ–Ω–∫–∞: {feedback_data['rating']}/5

üí¨ –¢–ï–ö–°–¢ –í–Ü–î–ì–£–ö–£:
{feedback_data['feedback']}

---
–¶–µ–π email –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —Å–∏—Å—Ç–µ–º–æ—é –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É.
–í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –Ω–∞ —Ü–µ–π email.
    """


def create_user_confirmation_template(feedback_data):
    """HTML template for user confirmation"""
    return f"""
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #333;">‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!</h2>
        <p style="font-size: 1.1em;">–í–∞—à–∞ –¥—É–º–∫–∞ –¥—É–∂–µ –≤–∞–∂–ª–∏–≤–∞ –¥–ª—è –Ω–∞—Å</p>
        <p>–®–∞–Ω–æ–≤–Ω–∏–π(–Ω–∞) {feedback_data['name']},</p>
        <p>–î—è–∫—É—î–º–æ, —â–æ –∑–Ω–∞–π—à–ª–∏ —á–∞—Å –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º–∏ –¥—É–º–∫–∞–º–∏ –ø—Ä–æ –Ω–∞—à –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫! –í–∞—à –≤—ñ–¥–≥—É–∫ –¥–æ–ø–æ–º–æ–∂–µ –Ω–∞–º —Å—Ç–∞—Ç–∏ –∫—Ä–∞—â–∏–º–∏.</p>
        <h3>üìù –í–∞—à –≤—ñ–¥–≥—É–∫:</h3>
        <p><strong>–û—Ü—ñ–Ω–∫–∞:</strong> {'‚òÖ' * feedback_data['rating']}{'‚òÜ' * (5 - feedback_data['rating'])} ({feedback_data['rating']}/5)</p>
        <p><strong>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</strong> {feedback_data['category']}</p>
        <p><strong>–î–∞—Ç–∞ –ø–æ–¥–∞–Ω–Ω—è:</strong> {datetime.now().strftime('%d.%m.%Y –æ %H:%M')}</p>
        <h3>üöÄ –©–æ –¥–∞–ª—ñ?</h3>
        <ul>
            <li>–ú–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ –≤–∞—à –≤—ñ–¥–≥—É–∫ –ø—Ä–æ—Ç—è–≥–æ–º 24-48 –≥–æ–¥–∏–Ω</li>
            <li>–ó–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω—å</li>
            <li>–ü–æ—Å—Ç–∞—Ä–∞—î–º–æ—Å—è –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—à—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –≤ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω–Ω—è—Ö</li>
        </ul>
        <p>–©–µ —Ä–∞–∑ –¥—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Ç–∞ –¥–æ–≤—ñ—Ä—É!</p>
        <p>–ó –ø–æ–≤–∞–≥–æ—é,<br>–ö–æ–º–∞–Ω–¥–∞ —Ä–æ–∑—Ä–æ–±–∫–∏</p>
        <hr>
        <p style="font-size: 0.9em; color: #666;">
            –¶–µ–π –ª–∏—Å—Ç –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –Ω—å–æ–≥–æ.
            –Ø–∫—â–æ —É –≤–∞—Å —î –ø–∏—Ç–∞–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –Ω–∞ <a href="mailto:tttkhaimyk@gmail.com">tttkhaimyk@gmail.com</a>
        </p>
    </div>
    """


def create_user_text_template(feedback_data):
    """Text template for user confirmation"""
    return f"""
‚úÖ –î–Ø–ö–£–Ñ–ú–û –ó–ê –í–ê–® –í–Ü–î–ì–£–ö!

–®–∞–Ω–æ–≤–Ω–∏–π(–Ω–∞) {feedback_data['name']},

–î—è–∫—É—î–º–æ, —â–æ –∑–Ω–∞–π—à–ª–∏ —á–∞—Å –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º–∏ –¥—É–º–∫–∞–º–∏ –ø—Ä–æ –Ω–∞—à –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫!

üìù –í–ê–® –í–Ü–î–ì–£–ö:
–û—Ü—ñ–Ω–∫–∞: {feedback_data['rating']}/5
–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {feedback_data['category']}
–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y –æ %H:%M')}

üöÄ –©–û –î–ê–õ–Ü?
‚Ä¢ –ú–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ –≤–∞—à –≤—ñ–¥–≥—É–∫ –ø—Ä–æ—Ç—è–≥–æ–º 24-48 –≥–æ–¥–∏–Ω
‚Ä¢ –ó–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç–∞—Ä–∞—î–º–æ—Å—è –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—à—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ —Ä–æ–∑—Ä–æ–±–∫–∏

---
–Ø–∫—â–æ —É –≤–∞—Å —î –ø–∏—Ç–∞–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞: tttkhaimyk@gmail.com
    """


def send_feedback_emails(feedback_data) -> bool:
    """Sends emails to admin and user after feedback submission."""
    sender_email = current_app.config.get('MAIL_DEFAULT_SENDER')
    if not sender_email:
        return False

    recipient_email = os.getenv('FEEDBACK_RECIPIENT_EMAIL')
    if not recipient_email:
        return False

    try:
        msg_admin = Message(
            subject=f"–ù–æ–≤–∏–π –≤—ñ–¥–≥—É–∫ –≤—ñ–¥ {feedback_data['name']}",
            sender=sender_email,
            recipients=[recipient_email],
            body=create_admin_text_template(feedback_data),
            html=create_admin_html_template(feedback_data)
        )
        mail.send(msg_admin)

        msg_user = Message(
            subject="–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!",
            sender=sender_email,
            recipients=[feedback_data['email']],
            body=create_user_text_template(feedback_data),
            html=create_user_confirmation_template(feedback_data)
        )
        mail.send(msg_user)

        return True
    except ValidationError as e:
        return False


@feedback.route('/feedback', methods=['POST'])
def submit_feedback():
    """Endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    try:
        data = request.get_json()
        if not data:
            return create_response(
                status_code=400,
                message='–ù–µ –Ω–∞–¥–∞–Ω–æ –¥–∞–Ω–∏—Ö'
            )

        try:
            validated_data = FeedbackSchema(**data)
        except ValidationError as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó: {e.errors()}")
            return create_response(
                status_code=400,
                message='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏',
                details=e.errors()
            )

        feedback_data = validated_data.dict()
        feedback_data['submitted_at'] = datetime.now().isoformat()

        emails_sent = send_feedback_emails(feedback_data)

        return create_response(
            status_code=200,
            message='–í—ñ–¥–≥—É–∫ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ! –î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –¥—É–º–∫—É.',
            data={
                'submitted_at': feedback_data['submitted_at'],
                'emails_sent': emails_sent,
                'confirmation_sent': emails_sent
            }
        )

    except Exception as e:
        print(f"–ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ feedback: {str(e)}")
        return create_response(
            status_code=500,
            message='–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
            details=str(e)
        )


@feedback.route('/feedback/stats', methods=['GET'])
@logged_in_required
def get_feedback_stats():
    """Retrieve feedback statistics."""
    return create_response(
        status_code=200,
        message='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ñ–¥–≥—É–∫—ñ–≤',
        data={
            'total_feedback': 0,
            'average_rating': 0,
            'categories': {},
            'note': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤'
        }
    )
